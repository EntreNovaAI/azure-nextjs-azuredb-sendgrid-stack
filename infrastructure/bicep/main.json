{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "10138482458106356415"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 15,
      "metadata": {
        "description": "Prefix for all resource names (3-15 lowercase alphanumeric characters)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for all resources"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "SQL Server administrator username"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "SQL Server administrator password"
      }
    },
    "sqlDatabaseSku": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "S3"
      ],
      "metadata": {
        "description": "SQL Database SKU (Basic, S0, S1, etc.)"
      }
    },
    "deployStorage": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Azure Storage Account"
      }
    },
    "deployOpenAI": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Azure OpenAI Service"
      }
    },
    "deployWebPubSub": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Azure Web PubSub Service"
      }
    },
    "deployMonitoring": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Application Insights monitoring"
      }
    },
    "containerImageTag": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Container image tag"
      }
    }
  },
  "variables": {
    "sqlServerName": "[format('{0}-sql-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "sqlDatabaseName": "[format('{0}-db', parameters('prefix'))]",
    "acrName": "[format('{0}acr{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "keyVaultName": "[format('{0}-kv-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "containerAppEnvName": "[format('{0}-env-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "containerAppName": "[format('{0}-app', parameters('prefix'))]",
    "storageAccountName": "[format('{0}st{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "openAIAccountName": "[format('{0}-openai-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "webPubSubName": "[format('{0}-pubsub-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "logAnalyticsName": "[format('{0}-logs-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "appInsightsName": "[format('{0}-insights-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]"
  },
  "resources": {
    "sqlDatabase": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "sqlDatabaseDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlServerName": {
            "value": "[variables('sqlServerName')]"
          },
          "sqlDatabaseName": {
            "value": "[variables('sqlDatabaseName')]"
          },
          "administratorLogin": {
            "value": "[parameters('sqlAdminUsername')]"
          },
          "administratorPassword": {
            "value": "[parameters('sqlAdminPassword')]"
          },
          "databaseSku": {
            "value": "[parameters('sqlDatabaseSku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "1846081596558978938"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region"
              }
            },
            "sqlServerName": {
              "type": "string",
              "metadata": {
                "description": "SQL Server name"
              }
            },
            "sqlDatabaseName": {
              "type": "string",
              "metadata": {
                "description": "SQL Database name"
              }
            },
            "administratorLogin": {
              "type": "string",
              "metadata": {
                "description": "SQL Server administrator username"
              }
            },
            "administratorPassword": {
              "type": "securestring",
              "metadata": {
                "description": "SQL Server administrator password"
              }
            },
            "databaseSku": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "S0",
                "S1",
                "S2",
                "S3"
              ],
              "metadata": {
                "description": "SQL Database SKU"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2024-11-01-preview",
              "name": "[parameters('sqlServerName')]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorPassword')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2024-11-01-preview",
              "name": "[format('{0}/{1}', parameters('sqlServerName'), parameters('sqlDatabaseName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('databaseSku')]",
                "tier": "[if(equals(parameters('databaseSku'), 'Basic'), 'Basic', 'Standard')]"
              },
              "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Local"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2024-11-01-preview",
              "name": "[format('{0}/{1}', parameters('sqlServerName'), 'AllowAzureServices')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
              ]
            }
          ],
          "outputs": {
            "sqlServerFqdn": {
              "type": "string",
              "metadata": {
                "description": "SQL Server FQDN"
              },
              "value": "[reference(resourceId('Microsoft.Sql/servers', parameters('sqlServerName')), '2024-11-01-preview').fullyQualifiedDomainName]"
            },
            "sqlServerName": {
              "type": "string",
              "metadata": {
                "description": "SQL Server name"
              },
              "value": "[parameters('sqlServerName')]"
            },
            "sqlDatabaseName": {
              "type": "string",
              "metadata": {
                "description": "SQL Database name"
              },
              "value": "[parameters('sqlDatabaseName')]"
            },
            "sqlServerId": {
              "type": "string",
              "metadata": {
                "description": "SQL Server resource ID"
              },
              "value": "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            }
          }
        }
      }
    },
    "containerRegistry": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "containerRegistryDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "acrName": {
            "value": "[variables('acrName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "3484863599143538319"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region"
              }
            },
            "acrName": {
              "type": "string",
              "metadata": {
                "description": "Container Registry name (must be globally unique)"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2025-11-01",
              "name": "[parameters('acrName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "adminUserEnabled": false,
                "publicNetworkAccess": "Enabled",
                "zoneRedundancy": "Disabled",
                "dataEndpointEnabled": false,
                "networkRuleBypassOptions": "AzureServices"
              }
            }
          ],
          "outputs": {
            "loginServer": {
              "type": "string",
              "metadata": {
                "description": "Container Registry login server"
              },
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName')), '2025-11-01').loginServer]"
            },
            "acrName": {
              "type": "string",
              "metadata": {
                "description": "Container Registry name"
              },
              "value": "[parameters('acrName')]"
            },
            "acrId": {
              "type": "string",
              "metadata": {
                "description": "Container Registry resource ID"
              },
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
            }
          }
        }
      }
    },
    "keyVault": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "keyVaultDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "4027040054674702081"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Key Vault name (must be globally unique)"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2025-05-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "enablePurgeProtection": true,
                "publicNetworkAccess": "Enabled",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                }
              }
            }
          ],
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Key Vault name"
              },
              "value": "[parameters('keyVaultName')]"
            },
            "keyVaultUri": {
              "type": "string",
              "metadata": {
                "description": "Key Vault URI"
              },
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2025-05-01').vaultUri]"
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault resource ID"
              },
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            }
          }
        }
      }
    },
    "storageAccount": {
      "condition": "[parameters('deployStorage')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "storageAccountDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "5516998815754211806"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region"
              }
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage Account name (must be globally unique)"
              }
            }
          },
          "resources": {
            "storageAccount": {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2025-06-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "publicNetworkAccess": "Enabled",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                }
              }
            },
            "blobService": {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2025-06-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                }
              },
              "dependsOn": [
                "storageAccount"
              ]
            }
          },
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage Account name"
              },
              "value": "[parameters('storageAccountName')]"
            },
            "connectionString": {
              "type": "securestring",
              "metadata": {
                "description": "Storage Account connection string"
              },
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys('storageAccount', '2025-06-01').keys[0].value, environment().suffixes.storage)]"
            },
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Storage Account resource ID"
              },
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            },
            "blobEndpoint": {
              "type": "string",
              "metadata": {
                "description": "Blob endpoint"
              },
              "value": "[reference('storageAccount').primaryEndpoints.blob]"
            }
          }
        }
      }
    },
    "openAI": {
      "condition": "[parameters('deployOpenAI')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "openAIDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "openAIAccountName": {
            "value": "[variables('openAIAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "2259583095651914154"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region (must support OpenAI)"
              }
            },
            "openAIAccountName": {
              "type": "string",
              "metadata": {
                "description": "OpenAI Account name"
              }
            },
            "modelName": {
              "type": "string",
              "defaultValue": "gpt-35-turbo",
              "metadata": {
                "description": "OpenAI deployment model"
              }
            },
            "modelVersion": {
              "type": "string",
              "defaultValue": "0613",
              "metadata": {
                "description": "OpenAI deployment model version"
              }
            },
            "deploymentCapacity": {
              "type": "int",
              "defaultValue": 10,
              "metadata": {
                "description": "OpenAI deployment capacity (in thousands of tokens per minute)"
              }
            }
          },
          "resources": {
            "openAIAccount": {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2025-10-01-preview",
              "name": "[parameters('openAIAccountName')]",
              "location": "[parameters('location')]",
              "kind": "OpenAI",
              "sku": {
                "name": "S0"
              },
              "properties": {
                "customSubDomainName": "[parameters('openAIAccountName')]",
                "publicNetworkAccess": "Enabled",
                "networkAcls": {
                  "defaultAction": "Allow"
                }
              }
            },
            "openAIDeployment": {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2025-10-01-preview",
              "name": "[format('{0}/{1}', parameters('openAIAccountName'), parameters('modelName'))]",
              "sku": {
                "name": "Standard",
                "capacity": "[parameters('deploymentCapacity')]"
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('modelName')]",
                  "version": "[parameters('modelVersion')]"
                }
              },
              "dependsOn": [
                "openAIAccount"
              ]
            }
          },
          "outputs": {
            "endpoint": {
              "type": "string",
              "metadata": {
                "description": "OpenAI endpoint"
              },
              "value": "[reference('openAIAccount').endpoint]"
            },
            "apiKey": {
              "type": "securestring",
              "metadata": {
                "description": "OpenAI API key"
              },
              "value": "[listKeys('openAIAccount', '2025-10-01-preview').key1]"
            },
            "deploymentName": {
              "type": "string",
              "metadata": {
                "description": "OpenAI deployment name"
              },
              "value": "[parameters('modelName')]"
            },
            "openAIId": {
              "type": "string",
              "metadata": {
                "description": "OpenAI resource ID"
              },
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIAccountName'))]"
            }
          }
        }
      }
    },
    "webPubSub": {
      "condition": "[parameters('deployWebPubSub')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "webPubSubDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "webPubSubName": {
            "value": "[variables('webPubSubName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "6840841970429873634"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region"
              }
            },
            "webPubSubName": {
              "type": "string",
              "metadata": {
                "description": "Web PubSub name"
              }
            },
            "webPubSubSku": {
              "type": "string",
              "defaultValue": "Free_F1",
              "allowedValues": [
                "Free_F1",
                "Standard_S1"
              ],
              "metadata": {
                "description": "Web PubSub SKU"
              }
            },
            "capacity": {
              "type": "int",
              "defaultValue": 1,
              "minValue": 1,
              "maxValue": 100,
              "metadata": {
                "description": "Web PubSub capacity (units)"
              }
            }
          },
          "resources": {
            "webPubSub": {
              "type": "Microsoft.SignalRService/webPubSub",
              "apiVersion": "2025-01-01-preview",
              "name": "[parameters('webPubSubName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('webPubSubSku')]",
                "capacity": "[parameters('capacity')]"
              },
              "properties": {
                "publicNetworkAccess": "Enabled",
                "tls": {
                  "clientCertEnabled": false
                }
              }
            }
          },
          "outputs": {
            "hostname": {
              "type": "string",
              "metadata": {
                "description": "Web PubSub hostname"
              },
              "value": "[reference('webPubSub').hostName]"
            },
            "connectionString": {
              "type": "securestring",
              "metadata": {
                "description": "Web PubSub connection string"
              },
              "value": "[listKeys('webPubSub', '2025-01-01-preview').primaryConnectionString]"
            },
            "webPubSubId": {
              "type": "string",
              "metadata": {
                "description": "Web PubSub resource ID"
              },
              "value": "[resourceId('Microsoft.SignalRService/webPubSub', parameters('webPubSubName'))]"
            }
          }
        }
      }
    },
    "monitoring": {
      "condition": "[parameters('deployMonitoring')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "monitoringDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsName": {
            "value": "[variables('logAnalyticsName')]"
          },
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "10218391039896394963"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region"
              }
            },
            "logAnalyticsName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics Workspace name"
              }
            },
            "appInsightsName": {
              "type": "string",
              "metadata": {
                "description": "Application Insights name"
              }
            },
            "retentionInDays": {
              "type": "int",
              "defaultValue": 30,
              "minValue": 30,
              "maxValue": 730,
              "metadata": {
                "description": "Log Analytics retention in days"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2025-07-01",
              "name": "[parameters('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": "[parameters('retentionInDays')]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[parameters('appInsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              ]
            }
          ],
          "outputs": {
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics Workspace ID"
              },
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
            },
            "logAnalyticsCustomerId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics Workspace customer ID"
              },
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName')), '2025-07-01').customerId]"
            },
            "appInsightsId": {
              "type": "string",
              "metadata": {
                "description": "Application Insights ID"
              },
              "value": "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
            },
            "appInsightsInstrumentationKey": {
              "type": "string",
              "metadata": {
                "description": "Application Insights instrumentation key"
              },
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
            },
            "appInsightsConnectionString": {
              "type": "string",
              "metadata": {
                "description": "Application Insights connection string"
              },
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02-preview').ConnectionString]"
            }
          }
        }
      }
    },
    "containerAppsEnvironment": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "containerAppsEnvDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environmentName": {
            "value": "[variables('containerAppEnvName')]"
          },
          "logAnalyticsWorkspaceId": "[if(parameters('deployMonitoring'), createObject('value', reference('monitoring').outputs.logAnalyticsWorkspaceId.value), createObject('value', ''))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "8871720876125051399"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region"
              }
            },
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Container Apps Environment name"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Log Analytics Workspace ID (optional)"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2025-07-01",
              "name": "[parameters('environmentName')]",
              "location": "[parameters('location')]",
              "properties": {
                "appLogsConfiguration": "[if(not(empty(parameters('logAnalyticsWorkspaceId'))), createObject('destination', 'log-analytics', 'logAnalyticsConfiguration', createObject('customerId', reference(parameters('logAnalyticsWorkspaceId'), '2022-10-01').customerId, 'sharedKey', listKeys(parameters('logAnalyticsWorkspaceId'), '2022-10-01').primarySharedKey)), null())]",
                "zoneRedundant": false
              }
            }
          ],
          "outputs": {
            "environmentId": {
              "type": "string",
              "metadata": {
                "description": "Container Apps Environment ID"
              },
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]"
            },
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Container Apps Environment name"
              },
              "value": "[parameters('environmentName')]"
            }
          }
        }
      },
      "dependsOn": [
        "monitoring"
      ]
    },
    "containerApp": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "containerAppDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "containerAppName": {
            "value": "[variables('containerAppName')]"
          },
          "containerAppEnvId": {
            "value": "[reference('containerAppsEnvironment').outputs.environmentId.value]"
          },
          "acrLoginServer": {
            "value": "[reference('containerRegistry').outputs.loginServer.value]"
          },
          "containerImageTag": {
            "value": "[parameters('containerImageTag')]"
          },
          "appInsightsConnectionString": "[if(parameters('deployMonitoring'), createObject('value', reference('monitoring').outputs.appInsightsConnectionString.value), createObject('value', ''))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "16368648208360192664"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region"
              }
            },
            "containerAppName": {
              "type": "string",
              "metadata": {
                "description": "Container App name"
              }
            },
            "containerAppEnvId": {
              "type": "string",
              "metadata": {
                "description": "Container Apps Environment ID"
              }
            },
            "acrLoginServer": {
              "type": "string",
              "metadata": {
                "description": "ACR login server"
              }
            },
            "containerImageTag": {
              "type": "string",
              "defaultValue": "latest",
              "metadata": {
                "description": "Container image tag"
              }
            },
            "appInsightsConnectionString": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Application Insights connection string (optional)"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2025-01-31-preview",
              "name": "[format('{0}-identity', parameters('containerAppName'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2025-07-01",
              "name": "[parameters('containerAppName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('containerAppName'))))]": {}
                }
              },
              "properties": {
                "managedEnvironmentId": "[parameters('containerAppEnvId')]",
                "configuration": {
                  "activeRevisionsMode": "Single",
                  "ingress": {
                    "external": true,
                    "targetPort": 3000,
                    "transport": "auto",
                    "allowInsecure": false,
                    "traffic": [
                      {
                        "latestRevision": true,
                        "weight": 100
                      }
                    ]
                  },
                  "registries": [
                    {
                      "server": "[parameters('acrLoginServer')]",
                      "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('containerAppName')))]"
                    }
                  ],
                  "secrets": []
                },
                "template": {
                  "containers": [
                    {
                      "name": "[parameters('containerAppName')]",
                      "image": "[format('{0}/{1}:{2}', parameters('acrLoginServer'), parameters('containerAppName'), parameters('containerImageTag'))]",
                      "resources": {
                        "cpu": "[json('0.25')]",
                        "memory": "0.5Gi"
                      },
                      "probes": [
                        {
                          "type": "Liveness",
                          "httpGet": {
                            "path": "/api/health",
                            "port": 3000,
                            "scheme": "HTTP"
                          },
                          "initialDelaySeconds": 15,
                          "periodSeconds": 30,
                          "timeoutSeconds": 5,
                          "failureThreshold": 3
                        },
                        {
                          "type": "Readiness",
                          "httpGet": {
                            "path": "/api/health",
                            "port": 3000,
                            "scheme": "HTTP"
                          },
                          "initialDelaySeconds": 10,
                          "periodSeconds": 10,
                          "timeoutSeconds": 3,
                          "failureThreshold": 3
                        }
                      ],
                      "env": "[if(not(empty(parameters('appInsightsConnectionString'))), createArray(createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', parameters('appInsightsConnectionString')), createObject('name', 'PORT', 'value', '3000'), createObject('name', 'NODE_ENV', 'value', 'production')), createArray(createObject('name', 'PORT', 'value', '3000'), createObject('name', 'NODE_ENV', 'value', 'production')))]"
                    }
                  ],
                  "scale": {
                    "minReplicas": 0,
                    "maxReplicas": 1,
                    "rules": [
                      {
                        "name": "http-scaling",
                        "http": {
                          "metadata": {
                            "concurrentRequests": "10"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('containerAppName')))]"
              ]
            }
          ],
          "outputs": {
            "containerAppName": {
              "type": "string",
              "metadata": {
                "description": "Container App name"
              },
              "value": "[parameters('containerAppName')]"
            },
            "containerAppFqdn": {
              "type": "string",
              "metadata": {
                "description": "Container App FQDN"
              },
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2025-07-01').configuration.ingress.fqdn]"
            },
            "containerAppPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Container App principal ID"
              },
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('containerAppName'))), '2025-01-31-preview').principalId]"
            },
            "containerAppIdentityId": {
              "type": "string",
              "metadata": {
                "description": "Container App identity ID"
              },
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('containerAppName')))]"
            },
            "containerAppId": {
              "type": "string",
              "metadata": {
                "description": "Container App resource ID"
              },
              "value": "[resourceId('Microsoft.App/containerApps', parameters('containerAppName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "containerAppsEnvironment",
        "containerRegistry",
        "monitoring"
      ]
    }
  },
  "outputs": {
    "sqlServerFqdn": {
      "type": "string",
      "metadata": {
        "description": "SQL Server FQDN"
      },
      "value": "[reference('sqlDatabase').outputs.sqlServerFqdn.value]"
    },
    "sqlDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "SQL Database name"
      },
      "value": "[reference('sqlDatabase').outputs.sqlDatabaseName.value]"
    },
    "sqlAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "SQL Server administrator username"
      },
      "value": "[parameters('sqlAdminUsername')]"
    },
    "acrLoginServer": {
      "type": "string",
      "metadata": {
        "description": "Azure Container Registry login server"
      },
      "value": "[reference('containerRegistry').outputs.loginServer.value]"
    },
    "acrName": {
      "type": "string",
      "metadata": {
        "description": "Azure Container Registry name"
      },
      "value": "[reference('containerRegistry').outputs.acrName.value]"
    },
    "containerAppName": {
      "type": "string",
      "metadata": {
        "description": "Container App name"
      },
      "value": "[reference('containerApp').outputs.containerAppName.value]"
    },
    "containerAppFqdn": {
      "type": "string",
      "metadata": {
        "description": "Container App FQDN"
      },
      "value": "[reference('containerApp').outputs.containerAppFqdn.value]"
    },
    "containerAppUrl": {
      "type": "string",
      "metadata": {
        "description": "Container App URL"
      },
      "value": "[format('https://{0}', reference('containerApp').outputs.containerAppFqdn.value)]"
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Key Vault name"
      },
      "value": "[reference('keyVault').outputs.keyVaultName.value]"
    },
    "keyVaultUri": {
      "type": "string",
      "metadata": {
        "description": "Key Vault URI"
      },
      "value": "[reference('keyVault').outputs.keyVaultUri.value]"
    },
    "storageConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Storage Account connection string (if deployed)"
      },
      "value": "[if(parameters('deployStorage'), listOutputsWithSecureValues('storageAccount', '2025-04-01').connectionString, '')]"
    },
    "openAIEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Azure OpenAI endpoint (if deployed)"
      },
      "value": "[if(parameters('deployOpenAI'), reference('openAI').outputs.endpoint.value, '')]"
    },
    "openAIApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Azure OpenAI API key (if deployed)"
      },
      "value": "[if(parameters('deployOpenAI'), listOutputsWithSecureValues('openAI', '2025-04-01').apiKey, '')]"
    },
    "webPubSubConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Web PubSub connection string (if deployed)"
      },
      "value": "[if(parameters('deployWebPubSub'), listOutputsWithSecureValues('webPubSub', '2025-04-01').connectionString, '')]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "metadata": {
        "description": "Application Insights connection string (if deployed)"
      },
      "value": "[if(parameters('deployMonitoring'), reference('monitoring').outputs.appInsightsConnectionString.value, '')]"
    },
    "containerAppPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Container App principal ID for role assignments"
      },
      "value": "[reference('containerApp').outputs.containerAppPrincipalId.value]"
    }
  }
}